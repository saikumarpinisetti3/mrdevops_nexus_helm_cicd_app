pipeline {
    agent any
    stages {
        stage('checkout') {
            steps {
                echo "checked out"
            }
        }
        stage('sonar quality check') {
            agent {
                docker {
                    image 'maven'
                    args '-u root'
                }
            }
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'token') {
                        // some block
                        sh 'mvn clean package sonar:sonar'
                    }
                }
            }
        }
                stage('sonar quality gate status'){
                steps{
                       script{
                        waitForQualityGate abortPipeline: false, credentialsId: 'token'
                       }
                }
            }
                 stage('docker build and push to nexus repo'){
                steps{
                    script{
                        withCredentials([string(credentialsId: 'nexus', variable: 'nexus-creds')]) {
                    sh 'docker build -t 13.232.182.185:8083/springapp:${VERSION} .'
                    sh 'docker login -u admin -p $nexus-creds 13.232.182.185:8083'
                    sh 'docker push 13.232.182.185:8083/springapp:${VERSION}'
                    sh 'docker rmi 13.232.182.185:8083/springapp:${VERSION}'
                    }
                }
            }
        }
    }
}
